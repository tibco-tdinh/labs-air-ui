---
name: Project Air UI

#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions

#############################
# Start the job on all push #
#############################
on: [push]

jobs:

  identify-changes:
    runs-on: ubuntu-latest
    outputs:
      all: ${{ steps.changes.outputs.all }}
      cloudChanged: ${{ steps.changes.outputs.cloudChanged }}
      commonChanged: ${{ steps.changes.outputs.commonChanged }}
      onPremChanged: ${{ steps.changes.outputs.onPremChanged }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Get changed files
        id: changes
# yamllint disable rule:line-length
        run: |
          PREVIOUS_SHA=$(git rev-parse HEAD^1 2>&1)
          echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT "${PREVIOUS_SHA}" ${{ github.sha }} | xargs)"
          echo "::set-output name=cloudChanged::$(git diff --name-only --diff-filter=ACMRT "${PREVIOUS_SHA}" ${{ github.sha }} | grep -E 'projects/cloud' | xargs)"
          echo "::set-output name=commonChanged::$(git diff --name-only --diff-filter=ACMRT "${PREVIOUS_SHA}" ${{ github.sha }} | grep -E 'projects/common' | xargs)"
          echo "::set-output name=onPremChanged::$(git diff --name-only --diff-filter=ACMRT "${PREVIOUS_SHA}" ${{ github.sha }} | grep -E 'projects/on-prem' | xargs)"

# yamllint enable rule:line-length

  test-common-library:
    # Set the agent to run on
    runs-on: ubuntu-latest
    needs: [identify-changes]
    # Build if the component changed or if in the main branch
    if: |
      (needs.identify-changes.outputs.commonChanged ||
        needs.identify-changes.outputs.cloudChanged ||
        needs.identify-changes.outputs.onPremChanged) ||
      github.ref == 'refs/heads/main'
    strategy:
      matrix:
        node-version: [16.x]
        project:
          - common

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Restore node modules cache
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ./node_modules
          key: |
            ${{ runner.os }}-cicd-ui-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cicd-ui-

      - name: Setup Node ${{ matrix.node-version }} for the project
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies for the ${{ matrix.project }}
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm config set fund false
          npm install

      - name: Run the unit tests for ${{ matrix.project }}
        run: |
          ./node_modules/.bin/ng test ${{ matrix.project }} --browsers ChromeHeadless --watch=false

      - name: Run the lint checks
        run: |
          ./node_modules/.bin/ng lint ${{ matrix.project }} || echo Lint exists in this project
          npx stylelint "projects/**/*.css" || echo Lint exists in the project

      - name: Save the coverrage report for ${{ matrix.project }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.project }}-coverage-report
          path: coverage/ProjectAir/${{ matrix.project }}

  build-common-library:
    runs-on: ubuntu-latest
    needs: [identify-changes, test-common-library]
    # Build if the component changed or if in the main branch
    if: |
      (needs.identify-changes.outputs.commonChanged ||
        needs.identify-changes.outputs.cloudChanged ||
        needs.identify-changes.outputs.onPremChanged) ||
      github.ref == 'refs/heads/main'

    strategy:
      matrix:
        node-version: [16.x]
        project:
          - common

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Cache node modules for the project
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ./node_modules
          key: |
            ${{ runner.os }}-cicd-ui-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cicd-ui-

      - name: Setup Node ${{ matrix.node-version }} for the project
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm config set fund false
          npm install

      - name: Build the ${{ matrix.project }} component
        run: |
          ./node_modules/.bin/ng build ${{ matrix.project }}

      - name: Cache the ${{ matrix.project }} library
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.project }}-library
          path: dist/${{ matrix.project }}

  test:
    # Set the agent to run on
    runs-on: ubuntu-latest
    needs: [identify-changes, build-common-library]
    # Build if the component changed or if in the main branch
    if: |
      (needs.identify-changes.outputs.commonChanged ||
        needs.identify-changes.outputs.cloudChanged ||
        needs.identify-changes.outputs.onPremChanged) ||
      github.ref == 'refs/heads/main'
    strategy:
      matrix:
        node-version: [16.x]
        project:
          - on-prem
          - cloud

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Restore node modules cache
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ./node_modules
          key: |
            ${{ runner.os }}-cicd-ui-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cicd-ui-

      - name: Setup Node ${{ matrix.node-version }} for the project
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore the common library
        uses: actions/download-artifact@v2
        with:
          name: common-library
          path: dist/common

      - name: Install dependencies for the ${{ matrix.project }}
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm config set fund false
          npm install

      - name: Run the unit tests for ${{ matrix.project }}
        run: |
          ./node_modules/.bin/ng test ${{ matrix.project }} --browsers ChromeHeadless --watch=false

      - name: Run the lint checks
        run: |
          ./node_modules/.bin/ng lint ${{ matrix.project }} || echo Lint exists in this project

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.project }}-coverage-report
          path: coverage/ProjectAir/${{ matrix.project }}

      #- name: E2E
      #  working-directory: src/MobileApp
      #  run: npm run e2e -- --configuration=ci

  build:
    runs-on: ubuntu-latest
    needs: [identify-changes, test]
    # Build if the component changed or if in the main branch
    if: |
      (needs.identify-changes.outputs.commonChanged ||
        needs.identify-changes.outputs.cloudChanged ||
        needs.identify-changes.outputs.onPremChanged) ||
      github.ref == 'refs/heads/main'

    strategy:
      matrix:
        node-version: [16.x]
        project:
          - on-prem
          - cloud

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Cache node modules for the project
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ./node_modules
          key: |
            ${{ runner.os }}-cicd-ui-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cicd-ui-

      - name: Setup Node ${{ matrix.node-version }} for the project
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm config set fund false
          npm install

      - name: Restore the common library
        uses: actions/download-artifact@v2
        with:
          name: common-library
          path: dist/common

      - name: Build the ${{ matrix.project }} component
        run: |
          ./node_modules/.bin/ng build ${{ matrix.project }}

      - name: Cache the ${{ matrix.project }} app
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.project }}
          path: dist/${{ matrix.project }}