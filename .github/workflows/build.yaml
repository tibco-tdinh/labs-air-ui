---
name: Project Air UI

#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions

#############################
# Start the job on all push #
#############################
on: [push]

jobs:

  identify-changes:
    runs-on: ubuntu-latest
    outputs:
      all: ${{ steps.changes.outputs.all }}
      appChanged: ${{ steps.changes.outputs.appChanged }}
      testsChanged: ${{ steps.changes.outputs.testsChanged }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Get changed files
        id: changes
# yamllint disable rule:line-length
        run: |
          export PREVIOUS_SHA=$(git rev-parse HEAD^1 2>&1)
          echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${PREVIOUS_SHA} ${{ github.sha }} | xargs)"
          echo "::set-output name=appChanged::$(git diff --name-only --diff-filter=ACMRT ${PREVIOUS_SHA} ${{ github.sha }} | egrep 'src|package' | xargs)"
          echo "::set-output name=testsChanged::$(git diff --name-only --diff-filter=ACMRT ${PREVIOUS_SHA} ${{ github.sha }} | grep spec.ts | xargs)"
# yamllint enable rule:line-length

  install-dependencies:
    runs-on: ubuntu-latest
    needs: [identify-changes]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
        if: needs.identify-changes.outputs.appChanged

      - name: Cache node modules for the App
        if: needs.identify-changes.outputs.appChanged
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ./node_modules
          key: |
            ${{ runner.os }}-cicd-ui-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cicd-ui-

      - name: Setup Node ${{ matrix.node-version }} for the App
        if: needs.identify-changes.outputs.appChanged
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Configure NPM for the App
        if: steps.cache.outputs.cache-hit != 'true' && needs.identify-changes.outputs.appChanged
        run: |
          npm config set fund false

      - name: Install dependencies for the App
        if: steps.cache.outputs.cache-hit != 'true' && needs.identify-changes.outputs.appChanged
        run: |
          npm install

  test-app:
    # Set the agent to run on
    runs-on: ubuntu-latest
    needs: [identify-changes, install-dependencies]
    # Build if the component changed or if in the main branch
    if: |
      (needs.identify-changes.outputs.appChanged || needs.identify-changes.outputs.testsChanged) ||
      github.ref == 'refs/heads/main'
    strategy:
      matrix:
        projects: 
          - on-prem 
          - cloud

    steps:
      - uses: actions/checkout@v2
      - name: Restore node modules cache
        if: needs.identify-changes.outputs.appChanged
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ./node_modules
          key: | 
            ${{ runner.os }}-cicd-ui-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cicd-ui-

      - name: Build common library
        if: needs.identify-changes.outputs.appChanged
        run: |
          npm run build common

      - name: Run the unit tests
        if: needs.identify-changes.outputs.appChanged
        run: |
          ../node_modules/.bin/ng test --browsers ChromeHeadless --watch=false
        working-directory: ${{ matrix.projects }}

      - uses: actions/upload-artifact@v2
        if: needs.identify-changes.outputs.appChanged
        with:
          name: ui-coverage-report
          path: coverage/ProjectAir

      - name: Run the lint checks
        if: needs.identify-changes.outputs.appChanged
        run: |
          ../node_modules/.bin/ng lint
        working-directory: ${{ matrix.projects }}

      #- name: E2E
      #  working-directory: src/MobileApp
      #  run: npm run e2e -- --configuration=ci